{"ast":null,"code":"import _slicedToArray from \"/Users/alexander.rivera@ibm.com/Documents/SoftwareDev/eagle-prime-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexander.rivera@ibm.com/Documents/SoftwareDev/eagle-prime-demo/src/components/Movie.tsx\";\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core';\nimport styles from './card.styles';\n\nconst Movie = props => {\n  const _useState = useState('Default title'),\n        _useState2 = _slicedToArray(_useState, 2),\n        movieTitle = _useState2[0],\n        setMovieTitle = _useState2[1];\n\n  const classes = props.classes;\n  const batch = props.batch;\n  const dbFile = props.dbFile;\n  const processLog = props.processLog;\n  console.log(\"Movie props\", props);\n\n  const getPayloadCard = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Amazon Payload\"), React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, dbFile[0].title), React.createElement(Typography, {\n      className: classes.pos,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"N/A\"), React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Director: \", dbFile[0].views[0].directors, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), \"Writers: \", dbFile[0].views[0].writers))));\n  };\n\n  const getMismatchCard = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Comparison Chart\"), React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Mismatches:\"), React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, processLog.negative[1].join(\": \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), processLog.negative[2].join(\": \")))));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"IMDB Data\"), React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, batch[0].Title), React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, batch[0].imdbID), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Director: \", batch[0].Director, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \"Writers: \", batch[0].Writer))));\n};\n\nexport default withStyles(styles)(Movie);","map":{"version":3,"sources":["/Users/alexander.rivera@ibm.com/Documents/SoftwareDev/eagle-prime-demo/src/components/Movie.tsx"],"names":["React","useState","Card","CardContent","Typography","withStyles","styles","Movie","props","movieTitle","setMovieTitle","classes","batch","dbFile","processLog","console","log","getPayloadCard","card","title","pos","views","directors","writers","getMismatchCard","negative","join","Title","imdbID","Director","Writer"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core';\nimport styles from './card.styles';\n\nconst Movie = (props:any) => {\n    const [movieTitle, setMovieTitle] = useState<String>('Default title');\n    const {classes} = props;\n    const {batch} = props;\n    const {dbFile} = props;\n    const {processLog} = props;\n\n    console.log(\"Movie props\", props);\n\n    const getPayloadCard = () => {\n        return(\n            <div>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Amazon Payload\n                     </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {dbFile[0].title}\n                        </Typography>\n                        <Typography className={classes.pos} color=\"textSecondary\">\n                            N/A\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Director: {dbFile[0].views[0].directors}\n                            <br />\n                            Writers: {dbFile[0].views[0].writers}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n\n    const getMismatchCard = () => {\n        return (\n            <div>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                           Comparison Chart\n                     </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            Mismatches:\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {processLog.negative[1].join(\": \")}\n                            <br />\n                            {processLog.negative[2].join(\": \")}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n\n    return(\n       <div>\n           <Card className={classes.card}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        IMDB Data\n                     </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {batch[0].Title}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {batch[0].imdbID}\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                        Director: {batch[0].Director}\n                    <br />\n                        Writers: {batch[0].Writer}\n                    </Typography>\n                </CardContent>\n           </Card>\n           {/* {getPayloadCard()}\n           {getMismatchCard()} */}\n       </div>\n    );\n}\n\nexport default withStyles(styles)(Movie);"]},"metadata":{},"sourceType":"module"}