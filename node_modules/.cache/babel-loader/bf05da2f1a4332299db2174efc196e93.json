{"ast":null,"code":"import _slicedToArray from \"/Users/alexander.rivera@ibm.com/Documents/SoftwareDev/eagle-prime-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexander.rivera@ibm.com/Documents/SoftwareDev/eagle-prime-demo/src/components/Report.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Movie from './Movie';\nimport axios from 'axios';\nimport MovieDB from '../data/db';\nimport { compareData } from '../data/moviePayload';\nimport { withStyles, Button } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './report.styles';\n\nconst Report = props => {\n  const initValue = [{}];\n  const initLog = {\n    positive: [{}],\n    negative: [{}]\n  };\n  const API_TITLE_ENPOINT = \"http://www.omdbapi.com/?apikey=e60c4b4a&&t=\";\n  const API_ID_ENDPOINT = \"http://www.omdbapi.com/?apikey=e60c4b4a&&i=\";\n\n  const _useState = useState(initValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        apiData = _useState2[0],\n        setApiData = _useState2[1]; // Defines the data pulled from IMDB through the batch given\n\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        payloadData = _useState4[0],\n        setPayloadData = _useState4[1]; // Defines the data given through Amazon Payload\n\n\n  const _useState5 = useState(initLog),\n        _useState6 = _slicedToArray(_useState5, 2),\n        processLog = _useState6[0],\n        setProcessLog = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isInspecting = _useState8[0],\n        setIsInspecting = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        key = _useState10[0],\n        setKey = _useState10[1];\n\n  const classes = props.classes;\n  const batch = props.batch;\n  useEffect(() => {\n    const fetchDataByTitle = async () => {\n      const _ref = await axios.get(\"\".concat(API_TITLE_ENPOINT, \"+\").concat(batch[0].title)),\n            movie = _ref.data;\n\n      if (apiData === initValue) {\n        apiData.shift();\n        console.log(\"Shifting\");\n      }\n\n      setApiData([...apiData, movie]);\n      const res = compareData(movie, MovieDB);\n      setProcessLog(compareData(movie, MovieDB));\n      console.log(\"Our current overall state\", apiData);\n      console.log(\"Our current state in map\", movie);\n      console.log(\"Title is \", batch[0].title);\n      console.log(\"Testing results\", res.positive.length);\n    };\n\n    fetchDataByTitle();\n    setPayloadData(MovieDB);\n  }, []);\n\n  const processDataComparison = (batch, payload) => {\n    const results = compareData(payload, batch);\n    console.log(\"These are the results from comparison: \", results);\n    return results;\n  };\n\n  const manageMovieDisplay = () => {\n    if (isInspecting) {\n      return React.createElement(Movie, {\n        batch: apiData,\n        dbFile: MovieDB,\n        processLog: processLog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    } else return;\n  };\n\n  const manageDisplay = () => {\n    let counter = 1;\n    return React.createElement(React.Fragment, null, React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paperRoot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Movie Title\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Positive Matches\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Mismatches\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, apiData.map((listing, i) => React.createElement(TableRow, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"left\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, listing.Title), React.createElement(TableCell, {\n      align: \"left\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, processLog.positive.length - 1), React.createElement(TableCell, {\n      align: \"left\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, processLog.negative.length - 1), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: () => {\n        isInspecting ? setIsInspecting(false) : setIsInspecting(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, isInspecting ? \"Hide\" : \"Inspect\"))))))), React.createElement(Grid, {\n      item: true,\n      lg: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.comparisonTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" \", \" \"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"imdbID\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Writers\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Directors\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Amazon Payload\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Batch Data\"))))), React.createElement(Grid, {\n      item: true,\n      lg: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, manageMovieDisplay()), React.createElement(Grid, {\n      item: true,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      size: \"large\",\n      color: \"secondary\",\n      className: classes.reportBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Report Log\")))));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: classes.headerLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"ReportID: 279940376\"), manageDisplay());\n};\n\nexport default withStyles(styles)(Report);","map":{"version":3,"sources":["/Users/alexander.rivera@ibm.com/Documents/SoftwareDev/eagle-prime-demo/src/components/Report.tsx"],"names":["React","useState","useEffect","Movie","axios","MovieDB","compareData","withStyles","Button","Grid","Table","TableBody","TableHead","TableRow","TableCell","Paper","styles","Report","props","initValue","initLog","positive","negative","API_TITLE_ENPOINT","API_ID_ENDPOINT","apiData","setApiData","payloadData","setPayloadData","processLog","setProcessLog","isInspecting","setIsInspecting","key","setKey","classes","batch","fetchDataByTitle","get","title","movie","data","shift","console","log","res","length","processDataComparison","payload","results","manageMovieDisplay","manageDisplay","counter","paperRoot","map","listing","i","Title","comparisonTable","reportBtn","headerLabel"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Movie from './Movie';\nimport ReportForm from './ReportForm';\nimport axios from 'axios';\nimport MovieDB from '../data/db';\nimport {compareData} from '../data/moviePayload';\nimport {withStyles, Button} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './report.styles';\n\n\nconst Report = (props:any) => {\n    const initValue = [\n        {}\n    ];\n\n    const initLog ={\n        positive:[{}],\n        negative:[{}]\n    }\n\n    const API_TITLE_ENPOINT = \"http://www.omdbapi.com/?apikey=e60c4b4a&&t=\";\n    const API_ID_ENDPOINT = \"http://www.omdbapi.com/?apikey=e60c4b4a&&i=\";\n    const [apiData, setApiData] = useState(initValue); // Defines the data pulled from IMDB through the batch given\n    const [payloadData, setPayloadData] = useState(); // Defines the data given through Amazon Payload\n    const [processLog, setProcessLog] = useState(initLog);\n    const [isInspecting, setIsInspecting] = useState(false);\n    const [key, setKey] = useState(0);\n    const {classes} = props;\n    const {batch} = props;\n\n    useEffect(() => {\n\n        const fetchDataByTitle = async () => {\n            const { data: movie } = await axios.get(`${API_TITLE_ENPOINT}+${batch[0].title}`)\n\n            if (apiData === initValue) {\n                apiData.shift();\n                console.log(\"Shifting\");\n            }\n\n            setApiData([...apiData, movie]);\n            const res = compareData(movie, MovieDB);\n            setProcessLog(compareData(movie, MovieDB));\n\n            console.log(\"Our current overall state\", apiData);\n            console.log(\"Our current state in map\", movie);\n            console.log(\"Title is \", batch[0].title );\n            console.log(\"Testing results\", res.positive.length);\n        }\n        \n        fetchDataByTitle();\n        setPayloadData(MovieDB);\n    }, [])\n\n\n    const processDataComparison = (batch:any, payload:any) => {\n        const results = compareData(payload, batch);\n        console.log(\"These are the results from comparison: \", results);\n\n        return results;\n    }\n\n    const manageMovieDisplay = () => {\n        if(isInspecting){\n            return(\n                <Movie batch={apiData} dbFile={MovieDB} processLog={processLog} />\n            );\n        } else return;\n    }\n\n    const manageDisplay = () => {\n        let counter = 1;\n        return(\n            <>\n                <Grid container alignItems=\"center\" justify=\"center\" >\n                    <Paper className={classes.paperRoot}>\n                        <Grid item lg={11}>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell align=\"left\">Movie Title</TableCell>\n                                        <TableCell align=\"left\">Positive Matches</TableCell>\n                                        <TableCell align=\"left\">Mismatches</TableCell>\n                                        <TableCell align=\"right\"></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {/* {() =>} */}\n                                    {apiData.map((listing: any, i:number) => (\n                                        <TableRow key={i}>\n                                            <TableCell align=\"left\" key={i}>{listing.Title}</TableCell>\n                                            <TableCell align=\"left\" key={i}>{processLog.positive.length - 1}</TableCell>\n                                            <TableCell align=\"left\" key={i}>{processLog.negative.length - 1}</TableCell>\n                                            <TableCell align=\"right\">\n                                                <Button variant=\"outlined\" onClick={() => {isInspecting ? setIsInspecting(false) : setIsInspecting(true)}}>\n                                                    {isInspecting ? \"Hide\" : \"Inspect\"}\n                                                </Button>\n                                            </TableCell>\n                                        </TableRow>\n                                        \n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </Grid>\n                        <Grid item lg={6} >\n                            <Table className={classes.comparisonTable}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell align=\"left\"> {} </TableCell>\n                                        <TableCell align=\"left\">imdbID</TableCell>\n                                        <TableCell align=\"left\">Writers</TableCell>\n                                        <TableCell align=\"left\">Directors</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"left\">Amazon Payload</TableCell>\n                                        <TableCell align=\"left\">Batch Data</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </Grid>\n                        <Grid item lg={8}>\n                            {manageMovieDisplay()}\n                        </Grid>\n                        <Grid item lg={4}>\n                            <Button variant=\"contained\" size=\"large\" color=\"secondary\" className={classes.reportBtn}>\n                                Report Log\n                            </Button>\n                        </Grid>\n                    </Paper>\n                    \n                </Grid>\n            \n            </>\n        );\n        \n    }\n\n    \n    return(\n        <div>\n            <h1 className={classes.headerLabel}>ReportID: 279940376</h1>\n            \n            {manageDisplay()}\n        </div>\n    );\n}\n\nexport default withStyles(styles)(Report);"]},"metadata":{},"sourceType":"module"}