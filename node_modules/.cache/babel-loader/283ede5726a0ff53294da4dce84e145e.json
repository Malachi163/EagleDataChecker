{"ast":null,"code":"import _slicedToArray from \"/Users/alexander.rivera@ibm.com/Documents/SoftwareDev/eagle-prime-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexander.rivera@ibm.com/Documents/SoftwareDev/eagle-prime-demo/src/components/Report.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { withStyles } from '@material-ui/core';\nimport styles from './report.styles';\nconst API_TITLE_ENPOINT = \"http://www.omdbapi.com/?apikey=e60c4b4a&&t=\";\nconst API_ID_ENDPOINT = \"http://www.omdbapi.com/?apikey=e60c4b4a&&i=\";\n\nconst Report = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        apiData = _useState2[0],\n        setApiData = _useState2[1];\n\n  const classes = props.classes;\n  const batch = props.batch;\n\n  const fetchMovieByTitle = async batch => {}; // const decomposeText = (title:string) => {\n  //     // We look for spaces, and change them to + signs for our api\n  //     console.log('Our original title: ', [...title]);\n  //     const space = \"/\\s/\"; \n  //     let result = '';\n  //     for(let letter of title){\n  //         result += (letter==space) ? \"+\" : letter;\n  //     }\n  //     console.log(\"our new str: \", result);\n  //     return result;\n  // }\n\n\n  const fetchMovieById = async (batch, endpoint) => {\n    const movies = batch.map(async title => {\n      console.log('Movie title being searched: ', title.title);\n      return await axios.get(endpoint + \"\".concat(title));\n    }); // const payload = await axios.get()\n  };\n\n  useEffect(() => {\n    console.log(fetchMovieById(batch, API_TITLE_ENPOINT));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: classes.headerLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Data Processing\"));\n};\n\nexport default withStyles(styles)(Report);","map":{"version":3,"sources":["/Users/alexander.rivera@ibm.com/Documents/SoftwareDev/eagle-prime-demo/src/components/Report.tsx"],"names":["React","useState","useEffect","axios","withStyles","styles","API_TITLE_ENPOINT","API_ID_ENDPOINT","Report","props","apiData","setApiData","classes","batch","fetchMovieByTitle","fetchMovieById","endpoint","movies","map","title","console","log","get","headerLabel"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAOA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,iBAAiB,GAAG,6CAA1B;AACA,MAAMC,eAAe,GAAG,6CAAxB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAe;AAAA,oBACIR,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,QACnBS,OADmB;AAAA,QACVC,UADU;;AAAA,QAEnBC,OAFmB,GAERH,KAFQ,CAEnBG,OAFmB;AAAA,QAGnBC,KAHmB,GAGVJ,KAHU,CAGnBI,KAHmB;;AAK1B,QAAMC,iBAAiB,GAAG,MAAOD,KAAP,IAAqB,CAE9C,CAFD,CAL0B,CAS1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAME,cAAc,GAAG,OAAOF,KAAP,EAAkBG,QAAlB,KAAsC;AACzD,UAAMC,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAU,MAAOC,KAAP,IAAqB;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAAK,CAACA,KAAlD;AACA,aAAO,MAAMhB,KAAK,CAACmB,GAAN,CAAUN,QAAQ,aAAIG,KAAJ,CAAlB,CAAb;AACH,KAHc,CAAf,CADyD,CAKzD;AACH,GAND;;AASAjB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAYN,cAAc,CAACF,KAAD,EAAQP,iBAAR,CAA1B;AACH,GAFQ,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAEM,OAAO,CAACW,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ;AAMH,CAxCD;;AA0CA,eAAenB,UAAU,CAACC,MAAD,CAAV,CAAmBG,MAAnB,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport MovieDB from '../data/db';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport {withStyles} from '@material-ui/core';\nimport styles from './report.styles';\n\nconst API_TITLE_ENPOINT = \"http://www.omdbapi.com/?apikey=e60c4b4a&&t=\";\nconst API_ID_ENDPOINT = \"http://www.omdbapi.com/?apikey=e60c4b4a&&i=\";\n\nconst Report = (props:any) => {\n    const [apiData, setApiData] = useState([]);\n    const {classes} = props;\n    const {batch} = props;\n\n    const fetchMovieByTitle = async (batch:any) => {\n\n    }\n\n    // const decomposeText = (title:string) => {\n    //     // We look for spaces, and change them to + signs for our api\n    //     console.log('Our original title: ', [...title]);\n    //     const space = \"/\\s/\"; \n    //     let result = '';\n    //     for(let letter of title){\n    //         result += (letter==space) ? \"+\" : letter;\n    //     }\n    //     console.log(\"our new str: \", result);\n    //     return result;\n    // }\n\n    const fetchMovieById = async (batch:any, endpoint:string) => {\n        const movies = batch.map(async (title:any) => {\n            console.log('Movie title being searched: ', title.title);\n            return await axios.get(endpoint+`${title}`);\n        })\n        // const payload = await axios.get()\n    }\n\n\n    useEffect(() => {\n        console.log(fetchMovieById(batch, API_TITLE_ENPOINT));\n    })\n\n    return(\n        <div>\n            <h1 className={classes.headerLabel}>Data Processing</h1>\n\n        </div>\n    );\n}\n\nexport default withStyles(styles)(Report);"]},"metadata":{},"sourceType":"module"}